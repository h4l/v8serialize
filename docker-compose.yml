name: v8serialize
services:
  echoserver-node-22:
    container_name: ${COMPOSE_PROJECT_NAME:?}-echoserver-node-22
    image: ghcr.io/h4l/v8serialize/echoserver:${ECHOSERVER_VERSION:?}-node-22
    networks: [v8serialize]
    labels:
      com.github.h4l.v8serialize.echoserver: "true"

  echoserver-node-18:
    container_name: ${COMPOSE_PROJECT_NAME:?}-echoserver-node-18
    image: ghcr.io/h4l/v8serialize/echoserver:${ECHOSERVER_VERSION:?}-node-18
    networks: [v8serialize]
    labels:
      com.github.h4l.v8serialize.echoserver: "true"

  echoserver-deno:
    container_name: ${COMPOSE_PROJECT_NAME:?}-echoserver-deno
    image: ghcr.io/h4l/v8serialize/echoserver:${ECHOSERVER_VERSION:?}-deno-1.46.1
    networks: [v8serialize]
    labels:
      com.github.h4l.v8serialize.echoserver: "true"

  integration_test:
    profiles: [integration]
    image: ${V8SERIALIZE_DEV_IMAGE:-v8serialize-dev:py312}
    networks: [v8serialize]
    environment:
      V8SERIALIZE_ECHOSERVERS: "${V8SERIALIZE_ECHOSERVERS:-__required_but_not_set__}"
    depends_on:
      - echoserver-node-22
      - echoserver-node-18
      - echoserver-deno
    command: pytest -m integration -vv
    volumes:
      - .:${WORKSPACE_MOUNT_PATH:-/workspace}
    working_dir: /workspace

networks:
  v8serialize:
    external: ${V8SERIALIZE_NETWORK_EXTERNAL:-false}
    name: ${V8SERIALIZE_NETWORK:-v8serialize}
