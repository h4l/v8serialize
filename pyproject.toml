[tool.poetry]
name = "v8serialize"
version = "0.1.0-alpha.0"
description = "Read & write JavaScript values from Python with the V8 serialization format."
authors = ["Hal Blackburn <hwtb2@cam.ac.uk>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
packaging = ">=14.5" # this version introduces the VERSION_PATTERN constant

[tool.poetry.group.dev.dependencies]
exceptiongroup = { version = "^1", python = "<3.11" }
hypothesis = "^6.108.8"
pytest = "^7"
black = "^24.8.0"
flake8 = "^7.1.0"
flake8-pyi = "^24.6.0"
Flake8-pyproject = "^1.2.3"
isort = "^5.13.2"
mypy = "^1.11.1"
flake8-bugbear = "^24.4.26"
frozendict = "^2.4.4"
pytest-cov = "^5.0.0"
pytest-insta = "^0.2.0"
httpx = "^0.27.0"
flake8-future-annotations = "^1.1.0"
typing-extensions = "^4.12.2"
pyupgrade = "^3.17.0"
pytest-xdist = "^3.6.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
max-line-length = 80
extend-select = "B950"
extend-ignore = "E203,E501,E701"
per-file-ignores = [
  # Allow unused imports as re-export in __init__
  "src/v8serialize/__init__.py:F401",
  "src/v8serialize/jstypes/__init__.py:F401",
]
force-future-annotations = true

[tool.isort]
profile = "black"
extra_standard_library = ["typing_extensions"]

[tool.mypy]
strict = true

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]

[tool.pytest.ini_options]
addopts = [
  "-n",
  "auto",
  "--strict-markers",
  "-m",
  "not integration",
  "--doctest-modules",
]
markers = ["integration: Integration tests"]
